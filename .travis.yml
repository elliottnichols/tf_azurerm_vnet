language: generic
git:
  quiet: true
  depth: 10
branches:
  only:
  - master
  - /^deploy-.*$/
sudo: required
services:
  - docker
env:
  - TF_VERSION=0.11.11 IMAGE_NAME=enichols/tf-tester

before_install:
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull ${IMAGE_NAME}

jobs:
  include:
    - stage: validate
      # if: type = commit
      install: true
      script:
        - pwd
        - ls -lha
        - docker run -v ${PWD}:/go/src/module:rw ${IMAGE_NAME} /bin/bash -c "ls -lha; pwd; cd /go/src/module; ls -lha; terraform fmt -check=true -diff=true -list=true"
        # # Run container in detached state
        # - docker run --detach --privileged --volume="${PWD}":/go/src/${TRAVIS_REPO_SLUG}:ro --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro ${IMAGE_NAME} /usr/lib/systemd/systemd > /tmp/container_id
        # # Check syntax of ansible playbook
        # - sudo docker exec "$(cat /tmp/container_id)" terraform fmt -check=true -diff=true -list=true
        # # Run ansible playbook
        # - sudo docker exec "$(cat /tmp/container_id)" terraform fmt -check=true -diff=true -list=true ./test/case1/scenario1/
        # # Clean up
        # - sudo docker stop "$(cat /tmp/container_id)"

    # - stage: full
    #   if: type = push AND branch = master
    #   install: true
    #   script:
    #     - docker build --build-arg BUILD_TERRAFORM_VERSION=${TERRAFORM_VERSION} --build-arg BUILD_ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID --build-arg BUILD_ARM_CLIENT_ID=$ARM_CLIENT_ID --build-arg BUILD_ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET --build-arg BUILD_ARM_TENANT_ID=$ARM_TENANT_ID -t ${IMAGE_NAME} .
    #     - docker run ${IMAGE_NAME} rake full